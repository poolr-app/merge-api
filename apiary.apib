FORMAT: 1A
HOST: http://merge.apiblueprint.org/

# Merge-API

Merge-API is a simple API for processing and managing user data for the Merge App Frontend Clients. (http://mergeapp.io)

Merge is versioned per Semantic Versioning (http://semver.org/)

The initial publication of this document marked `v0.0.1`. All API requests will be prefaced with the major version number. All requests will accept and return `application/json` format. 

The current API version is `v0.0.6` and is found at `root/v0/`. The current version will always be able to be found at root/.

# Authentication

You will need to authenticate to the API via an API_KEY that is passed through the header.
NOTE: must pass it as you would a standard HTTP AUTHORIZATION header and not a query parameter; should be in this format for the value:

    Header: Authorization
    Value: Token token=AKEIEN83faketokenfaketoken

If you don't have a valid API key you will get a 401 response similar to this:

    `{ "error": "unauthenticated", "error_description": "This action requires authentication to continue." }`

*NOTE*: This is not implemented for the current api version.

## TripPlanning: [/trips/{user_id}]{?range_size}

+ Parameters

    + user_id : 0 (number) - a unique identifier for a user

    + range_size: (number, optional) - the size of the range to return in days
        + Default: 7
### Get Trips: [GET]

TODO: Place all get as query params
+ Request (application/json)

    + Body

            {
                "date_range_start": "1489968000",
                "date_range_end": "1499968000",
                "is_driver": false,
                "include_cancelled": true
            }

+ Response 200 (application/json)

    + Body

            {
                "response": [
                { 
                    "trip_id": "76543",
                    "start_timestamp": "1491032700",
                    "end_timestamp": "1491042700",
                },
                { 
                    "trip_id": "76544",
                    "start_timestamp": "1491052700",
                    "end_timestamp": "1491062700",
                },
                { 
                    "trip_id": "76545",
                    "start_timestamp": "1491072700",
                    "end_timestamp": "1491082700",
                }],
                "count": 3
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

### Create Trip: [POST]
The location requires one of three categories:
- The location id number
- The location latitude and longitude
- The location address details

The second two are demonstrated below.

+ Request (application/json)

            { 
                "is_driver": false,
                "location_start": 
                {
                    "location_id": "",
                    "lat": "51.5033640",
                    "lon": "-0.1276250",
                    "street_address": "",
                    "city": "",
                    "province": "",
                    "postal_code": "",
                    "unit": "",
                    "country": ""
                }
                "location_end":
                {
                    "location_id": "",
                    "lat": "",
                    "lon": "",
                    "street_address": "1681 152 St",
                    "city": "Surrey",
                    "province": "BC",
                    "postal_code": "V4A 4N3",
                    "unit": "",
                    "country": "canada"
                }
            }

+ Response 200 (application/json)

    + Body

            {
                trip_id: "5467"
            }


+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

## Matching [/matching]
Responsible for pairing trips

### Get all Matches [GET]

TODO: Paginate

+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
            "response": [
            {
                "match_id": "12344",
                "included_trips": [
                    {
                        "trip_id": "5467"
                    },
                    { 
                        "trip_id": "5468" 
                    }
                ],
                "match_date": "1491092700",
                "match_cancelled": false
            },
            {
                "match_id": "98762",
                "included_trips": [
                    {
                        "trip_id": "65822" 
                    },
                    { 
                        "trip_id": "76529" 
                    }
                ],
                "match_date": "1491232700",
                "match_cancelled": true
            }],
            "count": 2
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

### form_matches(user_id): [POST]
+ Request (application/json)
    + Body

            {
                "user_id":"1234567"
            }

+ Response 204 (application/json)

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body


## Matching [/matching/{user_id}]

+ Parameters

    + user_id : 0 (number) - a unique identifier for a user

### Get User Matches: [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
            "response": [
            {
                "match_id": "12344",
                "included_trips": [
                    {
                        "trip_id": "5467"
                    },
                    { 
                        "trip_id": "5468" 
                    }
                ],
                "match_date": "1491092700",
                "match_cancelled": false
            },
            {
                "match_id": "98762",
                "included_trips": [
                    {
                        "trip_id": "65822" 
                    },
                    { 
                        "trip_id": "76529" 
                    }
                ],
                "match_date": "1491232700",
                "match_cancelled": true
            }],
            "count": 2
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

## Cancel Matches [/matching/cancel/{user_id}]

+ Parameters
    
    + user_id : 0 (number) - a unique identifier for a user

### Get User Cancellations: [GET]
Get the cancellations of a user

+ Request (application/json)

+ Response 200 (application/json)
    
    + Body

            {
                "response": [
                {
                    "match_id": "23434",
                    "included_trips": [
                        {
                            "trip_id": "23456" 
                        },
                        { 
                            "trip_id": "23455" 
                        }
                    ],
                    "match_date": "1490168700",
                    "match_cancelled": true
                },
                {
                    "match_id": "23892",
                    "included_trips": [
                        {
                            "trip_id": "23333" 
                        },
                        { 
                            "trip_id": "23345" 
                        }
                    ],
                    "match_date": "1490167700",
                    "match_cancelled": true
                }],
                "count": 2
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

### Cancel User's Match: [POST]
+ Request (application/json)
    + Body

            {
                "match_id":"12344"
            }

+ Response 204 (application/json)

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

## Invitations: [/invite]

Invites have an invitation status, one of pending, sent, accepted, expired

### Get all Invites [GET]

+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
                "response": [
                { 
                    "invite_id" : "98293",
                    "invite_status" : "pending",
                    "invite_user" : "23424"
                },
                { 
                    "invite_id" : "98293",
                    "invite_status" : "pending",
                    "invite_user" : "23424"
                }]
                "count" : 2
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body


### Create Invite: [POST]
+ Request (application/json)
    + Body

            {
                "user_id": "123456"
            }

+ Response 200 (application/json)
    + Body

            {
                "invite_id" : "98293",
                "invite_status" : "pending"
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

## Invites: [/invite/{invite_id}]

+ Paramaters
    + invite_id: 1 (number) The unique identifier of the invite

### get_invite_status(user_id): [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
                "invite_user" : "1234582"
                "invite_status" : "sent"
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body


### Cancel Invite [POST]

+ Request (application/json)

    + Body

            {
                "invite_id" : "123824"
            }

+ Response 204 (application/json)

+ Response 401 (application/json)

    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body


## UserManager: [/user]


Users may have one of many permission levels. It will be one of the following: `{"Global Admin" : 0, "Organisation Admin" : 1, "Branch Admin" : 2, "User" : 3 }`
Note: Global Admin is reserved for Poolr use only.

### Get All Users: [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
                "response": [
                { 
                    "user_id": "76543",
                    "join_timestamp": "1491032700",
                    "last_logon_timestamp": "1491042700",
                    "permission_level" : 3,
                    "email" : "bobby@fakeyfakefake.com",
                    "password_hash" : "hash_value".
                    "photo_uri" : "s3_bucket_link",
                    "fun_fact" : "I am a mystical being from another plane",
                    "licenses" : [],
                    "vehicles" : [],
                    "social_networks" : []
                },
                { 
                    "user_id": "76544",
                    "join_timestamp": "1491032700",
                    "last_logon_timestamp": "1491042700",
                    "permission_level" : 3,
                    "email" : "bobby@fakeyfakefake.com",
                    "password_hash" : "hash_value".
                    "photo_uri" : "s3_bucket_link",
                    "fun_fact" : "I am a mystical being from another plane",
                    "licenses" : [],
                    "vehicles" : [],
                    "social_networks" : []
                },
                { 
                    "user_id": "76545",
                    "join_timestamp": "1491032700",
                    "last_logon_timestamp": "1491042700",
                    "permission_level" : 3,
                    "email" : "bobby@fakeyfakefake.com",
                    "password_hash" : "hash_value".
                    "photo_uri" : "s3_bucket_link",
                    "fun_fact" : "I am a mystical being from another plane",
                    "licenses" : [],
                    "vehicles" : [],
                    "social_networks" : []
                },
                { 
                    "user_id": "76546",
                    "join_timestamp": "1491032700",
                    "last_logon_timestamp": "1491042700",
                    "permission_level" : 3,
                    "email" : "bobby@fakeyfakefake.com",
                    "password_hash" : "hash_value".
                    "photo_uri" : "s3_bucket_link",
                    "fun_fact" : "I am a mystical being from another plane",
                    "licenses" : [],
                    "vehicles" : [],
                    "social_networks" : []
                },
                { 
                    "user_id": "76547",
                    "join_timestamp": "1491032700",
                    "last_logon_timestamp": "1491042700",
                    "permission_level" : 3,
                    "email" : "bobby@fakeyfakefake.com",
                    "password_hash" : "hash_value".
                    "photo_uri" : "s3_bucket_link",
                    "fun_fact" : "I am a mystical being from another plane",
                    "licenses" : [],
                    "vehicles" : [],
                    "social_networks" : []
                }],
                "count": 5
            }


+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body


## User Details [/user/{user_id}]

+ Parameters
    + user_id : 1 (number) The unique identifier of a user

### Get user [GET]

+ Request (application/json)

+ Response 200 (application/json)
    + Body

            { 
                "user_id": "76547",
                "join_timestamp": "1491032700",
                "last_logon_timestamp": "1491042700",
                "permission_level" : 3,
                "email" : "bobby@fakeyfakefake.com",
                "password_hash" : "hash_value".
                "photo_uri" : "s3_bucket_link",
                "fun_fact" : "I am a mystical being from another plane",
                "licenses" : [],
                "vehicles" : [],
                "social_networks" : []
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

## User Admin Details [/user/{user_id}/perm]

+ Parameters
    + user_id : 1 (number) The unique identifier of a user

### Get Permission Level: [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
                "permission_level" : "2"
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

### Set Permission Level: [POST]
+ Request (application/json)
    + Body

            {
                "permission_level" : "2"
            }

+ Response 204 (application/json)

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

## User Photo Details [/user/{user_id}/photo]

+ Parameters
    + user_id : 1 (number) The unique identifier of a user

### get_photo(user_id): [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
                "photo_uri" : "s3_bucket_link"
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

### Set Photo: [POST]
+ Request (application/json)
    
    + Body

            {
                "photo_uri" : "s3_bucket_link"
            }

+ Response 204 (application/json)

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

## User Document Details [/user/{user_id}/doc]

+ Parameters
    + user_id : 1 (number) The unique identifier of a user

### Get Documents: [GET]
+ Request (application/json)
    + Body

            {
                "response" : [
                ],
                "count" : 0
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### Create Document: [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 204 (application/json)

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

## User Document Details [/user/{user_id}/doc/{doc_id}]

+ Parameters
    + user_id : 1 (number) The unique identifier of a user
    + doc_id : 1 (number) The unique identifier of a document

### Get Document [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body



## User Vehicles Details [/user/{user_id}/vehicle]

+ Parameters
    + user_id : 1 (number) The unique identifier of a user

### Get Vehicles: [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
                "response" : [
                ],
                "count" : 0
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

### Create Vehicle: [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 204 (application/json)

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

## User Vehicle Details [/user/{user_id}/vehicle/{vehicle_id}]

+ Parameters
    + user_id : 1 (number) The unique identifier of a user
    + vehicle_id : 1 (number) The unique identifier of a vehicle

### Get Vehicle [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body


### remove_vehicle(user_id): [DELETE]
+ Request (application/json)

+ Response 204 (application/json)

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500




## Social Networks [/user/{user_id}/network]

+ Parameters

    + user_id : 0 (number) - a unique identifier for a user


### get_social_networks(user_id): [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

### set_social_network(user_id, network, network_id): [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 204 (application/json)

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body


## Rejections [/trips/reject/{trip_id}]

### reject_trip(user_id, trip_id): [PUT]

+ Request (application/json)

    Accept: application/json

  + Body

            {
                user_id: "1234567", 
                trip_id: "87629"
            }

+ Response 204 

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

### get_rejections(user_id): [GET]
+ Request (application/json)
    + Body

            {
            }

+ Response 200 (application/json)
    + Body

            {
            }


+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body




## Scoring: [/scoring]
### get_total_score(user_id): [GET]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### get_punctionality_score(user_id): [GET]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### get_friendliness_score(user_id): [GET]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### set_total_score(user_id): [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### set_punctionality_score(user_id): [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### set_friendliness_score(user_id): [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### get_streak(user_id): [GET]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### set_streak(user_id, streak_value): [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### set_multiplier(group_id?, multiplier_value): [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### get_score_history(user_id, date_range_start, date_range_end): [GET]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


## Registration: [/registering]
### create_user(): [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


## Authentication: [/authenticating]
### get_password_hash(user_id): [GET]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### set_password_hash(user_id): [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }


### login(user_id, token): [POST]
+ Request (application/json)
    + Body

            {
            }

+ Response 401 (application/json)


    + Body

            { "error": "unauthenticated", "error_description": "This action requires authentication to continue." }

+ Response 500

    + Body

+ Response 200 (application/json)
    + Body

            {
            }
